import React, { Component } from 'react';
import '../../../styles/exploit.scss';
import classNames from 'classnames';
import {Icon} from '@blueprintjs/core';
import {Map} from 'immutable';
type propTypes = {
    tagId: string;
    tagValue: any;
    className: string;
    boardMap: Map<string, any>;
    switchActiveBoardId: (activeBoardId: string) => void;
    updateBoardMap: (boardMap: Map<string, any>) => void;
};

class BoardTag extends Component<propTypes> {
    constructor(props: propTypes) {
        super(props);
    }

    closeTag = (tagId: string) => {
        const {boardMap, updateBoardMap} = this.props;
        const newBoradMap = boardMap.delete(tagId);
        updateBoardMap(newBoradMap);
    };

    render() {
        const {className, tagId, tagValue, switchActiveBoardId} = this.props;
        return (
            <div key={tagId} className={classNames('board-tab', className)} onClick={() => switchActiveBoardId(tagId)}>
                <p>
                    {tagValue.icon}
                    <span className={'title'} title={tagValue.name} >{tagValue.name}</span>
                    <Icon className={'tab-icon-close'} icon={'small-cross'} iconSize={16} onClick={(e) => { this.closeTag(tagId); e.stopPropagation(); }} />
                </p>
            </div>);
    }
}
export default BoardTag;
