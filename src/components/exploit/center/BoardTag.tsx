import React, { Component } from 'react';
import '../../../styles/exploit.scss';
import classNames from 'classnames';
import {Icon} from '@blueprintjs/core';
import {List} from 'immutable';
type propTypes = {
    tag: any;
    className: string;
    boardList: List<any>;
    switchActiveBoardId: (activeBoardId: string) => void;
    updateBoardList: (boardList: List<any>) => void;
};

class BoardTag extends Component<propTypes> {
    constructor(props: propTypes) {
        super(props);
    }

    closeTag = (tagId: string) => {
        const {boardList, updateBoardList} = this.props;
        let index = -1;
        boardList.map((item, i) => {
            if (item.id === tagId) {
                index = i;
            }
        });
        const newBoradMap = boardList.delete(index);
        updateBoardList(newBoradMap);
    };

    render() {
        const {className, tag, switchActiveBoardId} = this.props;
        return (
            <div key={tag.id} className={classNames('board-tab', className)} onClick={() => switchActiveBoardId(tag.id)}>
                <p>
                    {tag.icon}
                    <span className={'title'} title={tag.name} >{tag.name}</span>
                    <Icon className={'tab-icon-close'} icon={'small-cross'} iconSize={16} onClick={(e) => { this.closeTag(tag.id); e.stopPropagation(); }} />
                </p>
            </div>);
    }
}
export default BoardTag;
