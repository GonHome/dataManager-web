import React, { Component } from 'react';
import LeftBoard from './left/LeftBoard';
import DefaultBoard from './main/DefaultBoard';
import * as exploitTypes from '../../models/exploit';
import '../../styles/exploit.scss';
import DatabaseManageDialog from './dialog/DatabaseManageDialog';
import FunctionDialog from './dialog/FunctionDialog';
import OfflineTaskDialog from './dialog/OfflineTaskDialog';
import RealTimeTaskDialog from './dialog/RealTimeTaskDialog';
import ResourceFileDialog from './dialog/ResourceFileDialog';
import TableManageDialog from './dialog/TableManageDialog';
import TemporaryTaskDialog from './dialog/TemporaryTaskDialog';
import WorkFlowDialog from './dialog/WorkFlowDialog';
import {List} from 'immutable';

type propTypes = {
    leftMenu: List<exploitTypes.leftMenu>;
    height: number;
    leftWidth: number ;
    rightWidth: number;
    exploitMouseMoveLeft: (leftWidth: number) => void;
    expandLeftMenu: (leftData: List<exploitTypes.leftData>, leftSwitch: string) => void;
    leftSwitch: string;
    switchLeftMenu: (leftSwitch: string) => void;
    leftDataTree: List<exploitTypes.leftData | {}>;
};

type stateTypes = {
    isWorkFlow: boolean;
    isOfflineTask: boolean;
    isRealTimeTask: boolean;
    isTemporaryTask: boolean;
    isTableManage: boolean;
    isDatabaseManage: boolean;
    isResourceFile: boolean;
    isFunction: boolean;
};

class ExploitBoard extends Component<propTypes, stateTypes> {

    constructor(props: propTypes) {
        super(props);
        this.state = {isWorkFlow: false, isOfflineTask: false, isRealTimeTask: false, isTemporaryTask: false, isTableManage: false, isDatabaseManage: false, isResourceFile: false, isFunction: false  };
    }

    changeOpen = (stateName: string, isOpen: boolean ) => {
        console.log(stateName);
            // @ts-ignore
        this.setState({[stateName]: isOpen});
    };

    render() {
        const {leftMenu, height, leftWidth, rightWidth, exploitMouseMoveLeft, leftSwitch, switchLeftMenu, leftDataTree, expandLeftMenu} = this.props;
        const {isWorkFlow, isOfflineTask, isRealTimeTask, isTemporaryTask, isTableManage, isDatabaseManage, isResourceFile, isFunction } = this.state;
        console.log(isWorkFlow, isOfflineTask, isRealTimeTask, isTemporaryTask, isTableManage, isDatabaseManage, isResourceFile, isFunction );
        return (
            <div>
                <LeftBoard expandLeftMenu={expandLeftMenu} leftMenu={leftMenu} height={height} leftWidth={leftWidth} exploitMouseMoveLeft={exploitMouseMoveLeft} leftSwitch={leftSwitch} switchLeftMenu={switchLeftMenu} leftDataTree={leftDataTree} changeOpen={this.changeOpen}/>
                <DefaultBoard leftWidth={leftWidth} rightWidth={rightWidth} height={height} changeOpen={this.changeOpen}/>
                <DatabaseManageDialog isOpen={isDatabaseManage} changeOpen={this.changeOpen} />
                <FunctionDialog isOpen={isFunction} changeOpen={this.changeOpen} />
                <OfflineTaskDialog isOpen={isOfflineTask} changeOpen={this.changeOpen} />
                <RealTimeTaskDialog isOpen={isRealTimeTask} changeOpen={this.changeOpen} />
                <ResourceFileDialog isOpen={isResourceFile} changeOpen={this.changeOpen} />
                <TableManageDialog isOpen={isTableManage} changeOpen={this.changeOpen} />
                <TemporaryTaskDialog isOpen={isTemporaryTask} changeOpen={this.changeOpen} />
                <WorkFlowDialog isOpen={isWorkFlow} changeOpen={this.changeOpen} />
            </div>);
    }
}
export default ExploitBoard;
